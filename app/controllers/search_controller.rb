class SearchController < ApplicationController
        def search
                if params[:search]
                        @definition = Wordnik.word.get_definitions(params[:search],:part_of_speech => 'noun,adjective,verb,adverb,interjection,pronoun,preposition,noun-plural,past-participle,proper-noun,verb-intransitive,verb-transitive')
                        @definitions = @definition.uniq {|e| e['partOfSpeech'] } 
                        @word = params[:search]
                        @pronounciation_url = "http://api.wordnik.com:80/v4/word.json/#{params[:search]}/pronunciations?useCanonical=false&api_key=#{Wordnik.configuration.api_key}"
                        pro_buffer = RestClient.get @pronounciation_url
                        @pro_results = JSON.parse(pro_buffer)
                        @related_url = "http://api.wordnik.com:80/v4/word.json/#{params[:search]}/relatedWords?useCanonical=false&limitPerRelationshipType=10&api_key=#{Wordnik.configuration.api_key}"
                        rel_buffer = RestClient.get @related_url
                        @rel_results = JSON.parse(rel_buffer)
                        @top_url = "http://api.wordnik.com:80/v4/word.json/#{params[:search]}/topExample?useCanonical=false&api_key=#{Wordnik.configuration.api_key}"
                        top_buffer = RestClient.get @top_url
                        @top_results = JSON.parse(top_buffer)
                        @example_url = "http://api.wordnik.com:80/v4/word.json/#{params[:search]}/examples?includeDuplicates=false&useCanonical=false&skip=0&api_key=#{Wordnik.configuration.api_key}"
                        example_buffer = RestClient.get @example_url
                        @example_results = JSON.parse(example_buffer)
                        @audio_url = "http://api.wordnik.com:80/v4/word.json/#{params[:search]}/audio?includeDuplicates=false&useCanonical=false&skip=0&api_key=#{Wordnik.configuration.api_key}"
                        audio_buffer = RestClient.get @audio_url
                        @audio_results = JSON.parse(audio_buffer)
                        @picture_url = "https://openclipart.org/search/json/?query=#{params[:search]}&amount=20"
                        pic_buffer = RestClient.get @picture_url
                        @pic_results = JSON.parse(pic_buffer)
                        @image = @pic_results['payload'][0]['svg']['png_thumb']
                        @image2 = @pic_results['payload'][1]['svg']['png_thumb']
                        @image3 = @pic_results['payload'][2]['svg']['png_thumb']
                        @image4 = @pic_results['payload'][3]['svg']['png_thumb']
                        @image5 = @pic_results['payload'][4]['svg']['png_thumb']
                        @xml = Nokogiri::XML(open("http://www.dictionaryapi.com/api/v1/references/sd2/xml/#{params[:search]}?key=42c43bc1-6d57-4fba-8453-2c6886a96a42"))
                        @elementary_xml = Nokogiri::XML(open("http://www.dictionaryapi.com/api/v1/references/learners/xml/#{params[:search]}?key=aa6dcb88-68ca-41d8-a980-fa0c55ac4718"))
                else
                end

        end

        def convert_pdf_wicked
          @params = {"utf8"=>"✓", "authenticity_token"=>"FdJNB08UwNjuFc5NAK0L85onhIMRHB8Ld26slZWUfO8z+6QfeR+5uuTX/Y5b4bQGbwImloXF5apJ5ZbM9GzjBg==", "word"=>"test", "definitions_count"=>"3", "part_of_speech_0_check"=>"1", "part_of_speech_0"=>"{\"textProns\"=>[], \"sourceDictionary\"=>\"ahd-legacy\", \"exampleUses\"=>[], \"relatedWords\"=>[], \"labels\"=>[], \"citations\"=>[], \"word\"=>\"test\", \"partOfSpeech\"=>\"noun\", \"attributionText\"=>\"from The American Heritage® Dictionary of the English Language, 4th Edition\", \"sequence\"=>\"0\", \"text\"=>\"A procedure for critical evaluation; a means of determining the presence, quality, or truth of something; a trial:  a test of one's eyesight; subjecting a hypothesis to a test; a test of an athlete's endurance. \", \"score\"=>0.0}", "part_of_speech_1_check"=>"1", "part_of_speech_1"=>"{\"textProns\"=>[], \"sourceDictionary\"=>\"ahd-legacy\", \"exampleUses\"=>[], \"relatedWords\"=>[], \"labels\"=>[], \"citations\"=>[], \"word\"=>\"test\", \"partOfSpeech\"=>\"verb-transitive\", \"attributionText\"=>\"from The American Heritage® Dictionary of the English Language, 4th Edition\", \"sequence\"=>\"7\", \"text\"=>\"To subject to a test; try:  tested the pen by scribbling on scrap paper; testing job applicants. \", \"score\"=>0.0}", "part_of_speech_2"=>"{\"textProns\"=>[], \"sourceDictionary\"=>\"ahd-legacy\", \"exampleUses\"=>[], \"relatedWords\"=>[], \"labels\"=>[], \"citations\"=>[], \"word\"=>\"test\", \"partOfSpeech\"=>\"verb-intransitive\", \"attributionText\"=>\"from The American Heritage® Dictionary of the English Language, 4th Edition\", \"sequence\"=>\"10\", \"text\"=>\"To undergo a test.\", \"score\"=>0.0}", "pronounciations_count"=>"2", "raw_type_0"=>"{\"seq\"=>0, \"rawType\"=>\"ahd-legacy\", \"raw\"=>\"(tĕst)\"}", "raw_type_0_check"=>"1", "raw_type_1"=>"{\"seq\"=>0, \"rawType\"=>\"arpabet\", \"raw\"=>\"T EH1 S T\"}", "raw_type_1_check"=>"1", "related_words_count"=>"10", "relationship_type_0"=>"{\"relationshipType\"=>\"equivalent\", \"words\"=>[\"testa\"]}", "relationship_type_0_check"=>"1", "relationship_type_1"=>"{\"relationshipType\"=>\"verb-form\", \"words\"=>[\"tested\", \"testes\", \"testing\", \"tests\"]}", "relationship_type_1_check"=>"1", "relationship_type_2"=>"{\"relationshipType\"=>\"hypernym\", \"words\"=>[\"submit\", \"take\", \"attempt\", \"endeavor\", \"effort\", \"endeavour\", \"try\", \"be\", \"cover\", \"covering\"]}", "relationship_type_2_check"=>"1", "relationship_type_3"=>"{\"relationshipType\"=>\"cross-reference\", \"words\"=>[\"teichmann' s test\", \"acetylation test\", \"böttger's sugar test\", \"ehrlich's test\", \"warren' s sulphur-chlorid test\", \"blavier' s test\", \"loop test\", \"catoptric test\", \"gmelin' s test\", \"test case\"]}", "relationship_type_3_check"=>"1", "relationship_type_4"=>"{\"relationshipType\"=>\"etymologically-related-term\", \"words\"=>[\"attest\", \"protest\", \"contest\", \"detest\"]}", "relationship_type_5"=>"{\"relationshipType\"=>\"variant\", \"words\"=>[\"examination\", \"exam\"]}", "relationship_type_6"=>"{\"relationshipType\"=>\"synonym\", \"words\"=>[\"criterion\", \"standard\", \"experiment\", \"proof\", \"experience\", \"trial\", \"touchstone\", \"judgment\", \"distinction\", \"discrimination\"]}", "relationship_type_7"=>"{\"relationshipType\"=>\"rhyme\", \"words\"=>[\"Best\", \"Blessed\", \"Brest\", \"Celeste\", \"Este\", \"Midwest\", \"Pest\", \"West\", \"abreast\", \"acquiesced\"]}", "relationship_type_8"=>"{\"relationshipType\"=>\"unknown\", \"words\"=>[\"Education\", \"Voices\"]}", "relationship_type_9"=>"{\"relationshipType\"=>\"same-context\", \"words\"=>[\"data\", \"analysis\", \"control\", \"requirement\", \"train\", \"standard\", \"level\", \"problem\"]}", "top_example"=>"Create a folder named test that contains two files one named. _test.txt and test. txt on OSX and copy to an SMB share on W2k3.", "examples_count"=>"5", "example_0"=>"{\"provider\"=>{\"name\"=>\"spinner\", \"id\"=>712}, \"year\"=>2009, \"rating\"=>8572.236, \"url\"=>\"http://forums.mozillazine.org/viewtopic.php?f=25&p=5895295&sid=48ff1279b97e7427199822c08e9a65c2#p5895295\", \"word\"=>\"test\", \"text\"=>\"Posted Yesterday, 11: 26 pm possible debugging - var test = \\\"imageurl\\\" + TLSTimeInSeconds; alert ( \\\"Looking for:\\\" +test);\", \"documentId\"=>10274887, \"exampleId\"=>80719959}", "example_0_check"=>"1", "example_1"=>"{\"provider\"=>{\"name\"=>\"spinner\", \"id\"=>712}, \"year\"=>2009, \"rating\"=>8572.236, \"url\"=>\"http://www.macwindows.com/leopard.html#012209c\", \"word\"=>\"test\", \"text\"=>\"Create a folder named test that contains two files one named. _test.txt and test. txt on OSX and copy to an SMB share on W2k3.\", \"title\"=>\"MacWindows\", \"documentId\"=>12503387, \"exampleId\"=>147942129}", "example_1_check"=>"1", "example_2"=>"{\"provider\"=>{\"name\"=>\"spinner\", \"id\"=>712}, \"year\"=>2010, \"rating\"=>5307.0, \"url\"=>\"http://article.wn.com/view/2010/04/27/Student_Choice_Loans_Fill_the_Gap_in_Rising_Cost_of_College_/\", \"word\"=>\"test\", \"text\"=>\"Class - goodmorning mr. jonas Joe - * holds up a stack of papers* were gonna start today with a science test Class - * all groan* Joe - oh stop it, its not that hard * hands out the tests* remember, if u have any questions, raise ur hands. you have 45 minutes to do this, so enjoy * sits at his desk/looks at nick* Nick - * looks up at him/mouths* evil Joe - * mouths back* I love you Nick - * blushes/starts his test* ~Right Before Lunch~ Nick -\", \"title\"=>\"WN.com - Financial News\", \"documentId\"=>27810938, \"exampleId\"=>674451165}", "example_2_check"=>"1", "example_3"=>"{\"provider\"=>{\"name\"=>\"spinner\", \"id\"=>712}, \"year\"=>2010, \"rating\"=>5307.0, \"url\"=>\"http://www.linuxquestions.org/questions/showthread.php?t=787900\", \"word\"=>\"test\", \"text\"=>\"[test] writeable = yes force user = test force group = test path =/test write list = test @test\", \"title\"=>\"LinuxQuestions.org\", \"documentId\"=>26578055, \"exampleId\"=>562445697}", "example_4"=>"{\"provider\"=>{\"name\"=>\"spinner\", \"id\"=>712}, \"year\"=>2009, \"rating\"=>5235.635, \"url\"=>\"http://www.autohotkey.com/forum/viewtopic.php?p=306107#306107\", \"word\"=>\"test\", \"text\"=>\"RUN explorer c: \\\\ send {t} {space} this will select the test file, but not always, as there could be more files starting with a t and no i dont want to put a highly unusual character infront of test. txt, like ~test. txt to make it stand out, this is really n gging me other yucky workaround: run cmd,, winwaitactive C: \\\\Windows\\\\system32\\\\cmd. exe send explorer/select, % profile%\\\\my jumplists\\\\kk\\\\edit kk. lnk {enter} sleep 200 winclose C: \\\\Windows\\\\system32\\\\cmd. exe\", \"title\"=>\"AutoHotkey Community\", \"documentId\"=>20415920, \"exampleId\"=>390998267}", "pictures_count"=>"20", "picture_0"=>"{\"title\"=>\"logarithmic spectrum steps 6\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps. With overlapping to avoid rendering gaps.\", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202186, remix+202190, remix+233649, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>16, \"detail_link\"=>\"https://openclipart.org/detail/233650/logarithmic%20spectrum%20steps%206\", \"id\"=>233650, \"created\"=>\"2015-12-08 00:21:09\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233650/exp10.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233650/exp10.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233650/exp10.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233650/exp10.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>250, \"height\"=>125}, \"png_full_lossy\"=>{\"width\"=>800, \"height\"=>400}}}", "picture_1"=>"{\"title\"=>\"logarithmic spectrum steps 5\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps.\", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202186, remix+202190, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>12, \"detail_link\"=>\"https://openclipart.org/detail/233649/logarithmic%20spectrum%20steps%205\", \"id\"=>233649, \"created\"=>\"2015-12-08 00:19:02\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233649/exp9.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233649/exp9.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233649/exp9.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233649/exp9.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>250, \"height\"=>125}, \"png_full_lossy\"=>{\"width\"=>800, \"height\"=>400}}}", "picture_2"=>"{\"title\"=>\"spectrum squares 4\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>3, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps. With overlapping to avoid gaps of anti-aliasing. \", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+228849, remix+232953, remix+233021, remix+233592, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>45, \"detail_link\"=>\"https://openclipart.org/detail/233593/spectrum%20squares%204\", \"id\"=>233593, \"created\"=>\"2015-12-07 01:00:53\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233593/exp8.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233593/exp8.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233593/exp8.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233593/exp8.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>125, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>400, \"height\"=>800}}}", "picture_3"=>"{\"title\"=>\"spectrum squares 3\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>2, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps.\", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+228849, remix+232777, remix+233003, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>39, \"detail_link\"=>\"https://openclipart.org/detail/233592/spectrum%20squares%203\", \"id\"=>233592, \"created\"=>\"2015-12-07 00:56:35\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233592/exp7.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233592/exp7.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233592/exp7.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233592/exp7.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>125, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>400, \"height\"=>800}}}", "picture_4"=>"{\"title\"=>\"logarithmic spectrum steps 4\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps. With overlapping to avoid rendering gaps.\", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+228849, remix+232777, remix+233003, remix+233470, remix+233472, remix+233590, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>36, \"detail_link\"=>\"https://openclipart.org/detail/233591/logarithmic%20spectrum%20steps%204\", \"id\"=>233591, \"created\"=>\"2015-12-07 00:52:23\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233591/exp6.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233591/exp6.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233591/exp6.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233591/exp6.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>250, \"height\"=>113}, \"png_full_lossy\"=>{\"width\"=>800, \"height\"=>360}}}", "picture_5"=>"{\"title\"=>\"logarithmic spectrum steps 3\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps.\", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+228849, remix+232777, remix+233003, remix+233470, remix+233472, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>40, \"detail_link\"=>\"https://openclipart.org/detail/233590/logarithmic%20spectrum%20steps%203\", \"id\"=>233590, \"created\"=>\"2015-12-07 00:47:51\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233590/exp5.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233590/exp5.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233590/exp5.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233590/exp5.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>250, \"height\"=>113}, \"png_full_lossy\"=>{\"width\"=>800, \"height\"=>360}}}", "picture_6"=>"{\"title\"=>\"spectrum squares 2\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps. With overlapping to avoid gaps of anti-aliasing. \", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+228849, remix+232927, remix+233022, remix+233470, remix+233472, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>31, \"detail_link\"=>\"https://openclipart.org/detail/233588/spectrum%20squares%202\", \"id\"=>233588, \"created\"=>\"2015-12-07 00:39:39\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233588/exp4.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233588/exp4.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233588/exp4.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233588/exp4.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>125, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>400, \"height\"=>800}}}", "picture_7"=>"{\"title\"=>\"spectrum squares\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps.\", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+228849, remix+232927, remix+233022, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>39, \"detail_link\"=>\"https://openclipart.org/detail/233472/spectrum%20squares\", \"id\"=>233472, \"created\"=>\"2015-12-05 22:37:47\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233472/exp2.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233472/exp2.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233472/exp2.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233472/exp2.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>125, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>400, \"height\"=>800}}}", "picture_8"=>"{\"title\"=>\"logarithmic spectrum steps 2\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps. A rendering concept also if you will. With overlapping to avoid gaps of anti-aliasing. \", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+232927, remix+233022, remix+233470, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>42, \"detail_link\"=>\"https://openclipart.org/detail/233471/logarithmic%20spectrum%20steps%202\", \"id\"=>233471, \"created\"=>\"2015-12-05 22:33:31\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233471/exp3.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233471/exp3.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233471/exp3.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233471/exp3.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>250, \"height\"=>113}, \"png_full_lossy\"=>{\"width\"=>800, \"height\"=>360}}}", "picture_9"=>"{\"title\"=>\"logarithmic spectrum steps\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"One gradient used for all the fills. Stretching results in seemingly flat coloured areas, like breaking down the gradient to its steps. A rendering concept also if you will. Experimenting.\", \"tags\"=>\"2015, bright, color, colour, colour theory, exp, exponent, exponential, gradient, hue, Lazur, log, logarithmic, logarythm, mathematics, overlapping beauties, primer, remix+202129, remix+202188, remix+228845, remix+232927, remix+233022, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>40, \"detail_link\"=>\"https://openclipart.org/detail/233470/logarithmic%20spectrum%20steps\", \"id\"=>233470, \"created\"=>\"2015-12-05 22:31:28\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233470/exp1.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233470/exp1.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233470/exp1.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233470/exp1.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>250, \"height\"=>113}, \"png_full_lossy\"=>{\"width\"=>800, \"height\"=>360}}}", "picture_10"=>"{\"title\"=>\"spectrum steps 10\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"\\\"Spectrum\\\" \\\"stepped\\\" into 1-36-37 steps. In reality only one gradient fill is used for all, so theoretically only the center horizontal axis of each rectangle is filled with the accurate colour -if ever. Also each rectangle has the same area, and the steps are adjusted for a repeating gradient (starting step is the same colour as the end step). With slight overlapping to avoid rendering \\\"gap\\\" between the tiles. \", \"tags\"=>\"2015, bright, color, colour, colour theory, gradient, hue, Lazur, mathematics, overlapping beauties, primer, remix+228845, remix+229145, remix+232927, remix+233022, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>55, \"detail_link\"=>\"https://openclipart.org/detail/233023/spectrum%20steps%2010\", \"id\"=>233023, \"created\"=>\"2015-11-29 04:54:24\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233023/stepped20.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233023/stepped20.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233023/stepped20.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233023/stepped20.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>67, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>216, \"height\"=>800}}}", "picture_11"=>"{\"title\"=>\"spectrum steps 9\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"\\\"Spectrum\\\" \\\"stepped\\\" into 1-36-37 steps. In reality only one gradient fill is used for all, so theoretically only the center horizontal axis of each rectangle is filled with the accurate colour -if ever. Also each rectangle has the same area, and the steps are adjusted for a repeating gradient (starting step is the same colour as the end step).\", \"tags\"=>\"2015, bright, color, colour, colour theory, gradient, hue, Lazur, mathematics, overlapping beauties, primer, remix+228845, remix+229145, remix+232927, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>82, \"detail_link\"=>\"https://openclipart.org/detail/233022/spectrum%20steps%209\", \"id\"=>233022, \"created\"=>\"2015-11-29 02:00:41\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233022/stepped18.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233022/stepped18.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233022/stepped18.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233022/stepped18.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>67, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>216, \"height\"=>800}}}", "picture_12"=>"{\"title\"=>\"spectrum steps 8\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"\\\"Spectrum\\\" \\\"stepped\\\" into 1-36-37 steps. In reality only one gradient fill is used for all, so theoretically only the center horizontal axis of each rectangle is filled with the accurate colour -if ever. Also each rectangle has the same area. With slight overlapping to avoid rendering gaps with anti-aliasing. \", \"tags\"=>\"2015, bright, color, colour, colour theory, gradient, hue, Lazur, mathematics, overlapping beauties, primer, remix+228845, remix+229145, remix+233003, remix+232777, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>63, \"detail_link\"=>\"https://openclipart.org/detail/233021/spectrum%20steps%208\", \"id\"=>233021, \"created\"=>\"2015-11-29 01:25:57\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233021/stepped17.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233021/stepped17.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233021/stepped17.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233021/stepped17.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>67, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>216, \"height\"=>800}}}", "picture_13"=>"{\"title\"=>\"spectrum steps 7\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"\\\"Spectrum\\\" \\\"stepped\\\" into 1-36-37 steps. In reality only one gradient fill is used for all, so theoretically only the center horizontal axis of each rectangle is filled with the accurate colour -if ever. Also each rectangle has the same area. \", \"tags\"=>\"2015, bright, color, colour, colour theory, gradient, hue, Lazur, mathematics, overlapping beauties, primer, remix+228845, remix+229145, remix+232777, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>70, \"detail_link\"=>\"https://openclipart.org/detail/233003/spectrum%20steps%207\", \"id\"=>233003, \"created\"=>\"2015-11-28 11:17:33\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/233003/stepped16.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/233003/stepped16.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/233003/stepped16.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/233003/stepped16.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>67, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>216, \"height\"=>800}}}", "picture_14"=>"{\"title\"=>\"spectrum steps 6\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"Gapless rendering at any zoom level, this grid contains the linear rgb field's hue range broken down to 1 to 36 steps. Uses only one gradient to achieve this.\", \"tags\"=>\"2015, bright, color, colour, colour theory, gradient, hue, Lazur, mathematics, overlapping beauties, primer, remix+202188, remix+228845, remix+232718, remix+232777, remix+232927, remix+232953, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>87, \"detail_link\"=>\"https://openclipart.org/detail/232981/spectrum%20steps%206\", \"id\"=>232981, \"created\"=>\"2015-11-26 23:07:25\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/232981/stepped15.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/232981/stepped15.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/232981/stepped15.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/232981/stepped15.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>135, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>432, \"height\"=>800}}}", "picture_15"=>"{\"title\"=>\"spectrum steps 5\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"\\\"Spectrum\\\" \\\"stepped\\\" into 1-36-37 steps. In reality only one gradient fill is used for all, so theoretically only the center horizontal axis of each rectangle is filled with the accurate colour -if ever. As, you cannot break down 256 to like 36 even steps. So there should be some rounding at rendering, still good for the original purpose I guess. This variant doesn't produce rendering gaps with anti-aliasing. \", \"tags\"=>\"2015, bright, chrominance, color, colour, colour theory, gradient, hue, Lazur, linear, mathematics, overlapping beauties, primer, remix+202188, remix+228845, remix+228846, remix+232718, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>109, \"detail_link\"=>\"https://openclipart.org/detail/232953/spectrum%20steps%205\", \"id\"=>232953, \"created\"=>\"2015-11-25 23:09:51\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/232953/stepped14.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/232953/stepped14.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/232953/stepped14.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/232953/stepped14.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>135, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>432, \"height\"=>800}}}", "picture_16"=>"{\"title\"=>\"spectrum steps 4\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"With a bit more convenient arrangement for displaying the spectrum colours. Still with rendering gaps. \", \"tags\"=>\"2015, bright, color, colour, colour theory, gradient, hue, Lazur, mathematics, primer, remix+202188, remix+228845, remix+232718, remix+232777, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>117, \"detail_link\"=>\"https://openclipart.org/detail/232927/spectrum%20steps%204\", \"id\"=>232927, \"created\"=>\"2015-11-24 23:10:16\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/232927/stepped10.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/232927/stepped10.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/232927/stepped10.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/232927/stepped10.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>250, \"height\"=>463}, \"png_full_lossy\"=>{\"width\"=>800, \"height\"=>1480}}}", "picture_17"=>"{\"title\"=>\"stepped gradient\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"Changed the gradient fill from the spectrum just for chilling. \", \"tags\"=>\"remix+232777, gradient steps, test, Lazur, URH, 2015, \", \"downloaded_by\"=>67, \"detail_link\"=>\"https://openclipart.org/detail/232778/stepped%20gradient\", \"id\"=>232778, \"created\"=>\"2015-11-22 23:03:28\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/232778/stepped4.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/232778/stepped4.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/232778/stepped4.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/232778/stepped4.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>135, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>432, \"height\"=>800}}}", "picture_18"=>"{\"title\"=>\"spectrum steps 3\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>1, \"description\"=>\"\\\"Spectrum\\\" \\\"stepped\\\" into 1-36-37 steps. In reality only one gradient fill is used for all, so theoretically only the center horizontal axis of each rectangle is filled with the accurate colour -if ever. As, you cannot break down 256 to like 36 even steps. So there should be some rounding at rendering, still good for the original purpose I guess. \", \"tags\"=>\"2015, bright, color, colour, colour theory, gradient, hue, Lazur, mathematics, primer, remix+202188, remix+228845, remix+232718, rgb, saturated, spectrum, steps, test images, URH\", \"downloaded_by\"=>88, \"detail_link\"=>\"https://openclipart.org/detail/232777/spectrum%20steps%203\", \"id\"=>232777, \"created\"=>\"2015-11-22 22:40:04\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/232777/stepped3.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/232777/stepped3.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/232777/stepped3.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/232777/stepped3.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>135, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>432, \"height\"=>800}}}", "picture_19"=>"{\"title\"=>\"cairo test -fail-\", \"uploader\"=>\"Lazur URH\", \"comments\"=>\"\", \"total_favorites\"=>0, \"description\"=>\"In the process of adding colours to the grid as large linear gradients.  Triggers rendering glitches. Test image. \", \"tags\"=>\"2015, bug, cairo, colour theory, gradient, Lazur, remix+228845, test, test images, URH\", \"downloaded_by\"=>96, \"detail_link\"=>\"https://openclipart.org/detail/232718/cairo%20test%20-fail-\", \"id\"=>232718, \"created\"=>\"2015-11-21 21:36:49\", \"svg\"=>{\"url\"=>\"https://openclipart.org/download/232718/spectrum-bug.svg\", \"png_thumb\"=>\"https://openclipart.org/image/250px/svg_to_png/232718/spectrum-bug.png\", \"png_full_lossy\"=>\"https://openclipart.org/image/800px/svg_to_png/232718/spectrum-bug.png\", \"png_2400px\"=>\"https://openclipart.org/image/2400px/svg_to_png/232718/spectrum-bug.png\"}, \"dimensions\"=>{\"png_thumb\"=>{\"width\"=>135, \"height\"=>250}, \"png_full_lossy\"=>{\"width\"=>432, \"height\"=>800}}}", "picture"=>"picture_19_check", "mw_dictionaries_count"=>"3", "hw_0"=>"test", "hw_0_check"=>"1", "hw_1"=>"test", "hw_1_check"=>"1", "hw_2"=>"test tube", "elem_def_count"=>"3", "elem_def_0"=>"{'word' => 'test', 'grammar' => 'noun', 'text' => ':a set of questions or problems that are designed to measure a persons knowledge, skills, or abilities She is studying for her math/spelling/history test. I passed/failed/flunked my biology test. The teacher sat at his desk grading tests. a drivers/driving test [=a test that is used to see if someone is able to safely drive a car] an IQ test test questions The test will be on [=the questions on the test will be about] the first three chapters of the book. We took/had a test on European capitals. = (Brit) We did a test on European capitals. The college relies on test scores in its admissions process. see also intelligence test rorschach test screen test'}", "elem_def_0_check"=>"1", "elem_def_1"=>"{'word' => 'test', 'grammar' => 'verbadjective', 'text' => ':to use a set of questions or problems to measure someones skills, knowledge, or abilities Weekly quizzes will test your understanding of the material. The students will all be tested again at the end of the school year. often + on The exam will test you on your understanding of basic grammar rules.'}", "elem_def_1_check"=>"1", "student_activity_count"=>"3", "student_activity"=>"This is a Student Activity 2", "mastery_activity_count"=>"3", "mastery_activity"=>"This is a Mastery Activity 2", "commit"=>"Export as PDF"}
          respond_to do |format|
            format.html { render layout: "pdf_theme.html.erb"}
            format.pdf do
              @pdf = render_to_string :pdf => "name.pdf",
                 :template => "search/convert_pdf_wicked.html.erb",
                 :layout => "pdf_theme.html.erb",
                 :page_size => "A4",
                 :orientation => "Landscape"
              send_data(@pdf, :type=>"application/pdf")
            end
          end
        end

        def convert_pdf
                definitions_count = params["definitions_count"]
                pronounciations_count = params["pronounciations_count"]
                related_words_count = params["related_words_count"]
                top_example = params["top_example"]
                examples_count = params["examples_count"]
                mw_dictionaries_count = params["mw_dictionaries_count"]
                pictures_count = params["pictures_count"]
                puts definitions_count
                respond_to do |format|
                        format.pdf do
                                pdf = Prawn::Document.new(:page_layout => :landscape)
                                        pdf.move_down(30)
                                        pdf.text params['word'].titleize, :size => 30
                                        pdf.move_down(30)
                                #Definition
                                        a = 0
                                        (0..definitions_count.to_i).each do |count|
                                            if params["part_of_speech_#{count}_check"] == "1"
                                              if a == 0
                                                pdf.text "STEP 1 :", :size => 20
                                                pdf.text "Say #{params['word']} 3 times", :size => 20
                                                pdf.stroke_horizontal_rule
                                                pdf.move_down(20)
                                              end
                                                definition = eval(params["part_of_speech_#{count}"])
                                                pdf.text "#{definition['partOfSpeech']} - #{definition['text']}" 
                                              a=a+1
                                            end
                                        end
                                 #Pronounciation
                                        b = 0
                                        (0..pronounciations_count.to_i).each do |count|
                                          if params["raw_type_#{count}_check"] == "1"
                                            if b == 0
                                              pdf.move_down(40)
                                              pdf.text "Pronounciation", :size => 20
                                              pdf.stroke_horizontal_rule
                                            end
                                            pdf.move_down(20)
                                            pronounciations = eval(params["raw_type_#{count}"])
                                            pdf.text "#{pronounciations['rawType']}" #- #{pronounciations['raw']}" 
                                            b = b+1
                                          end
                                        end
                                        #Related Words
                                        e = 0
                                        (0..related_words_count.to_i).each do |count|                                        
                                          if params["relationship_type_#{count}_check"] == "1"
                                            if e == 0
                                              pdf.move_down(40)
                                              pdf.text "Related Words", :size => 20
                                              pdf.stroke_horizontal_rule
                                            end
                                            pdf.move_down(20)
                                            related_words = eval(params["relationship_type_#{count}"])
                                            pdf.text "#{related_words['relationshipType']} = #{related_words['words'].join(",")}"
                                            e = e+1
                                          end
                                        end
                                        if params['top_example_check'] == "1"
                                        pdf.move_down(40)
                                        pdf.text "Top Examples", :size => 20
                                        pdf.stroke_horizontal_rule
                                                pdf.move_down(20)
                                                pdf.text top_example
                                        end

                                       puts "examples_check"
                                        c = 0
                                        pdf.move_down(40)
                                        (0..examples_count.to_i).each do |count|
                                          if params["example_#{count}_check"] == "1"
                                            if c == 0
                                              pdf.text "Examples", :size => 20
                                              pdf.stroke_horizontal_rule
                                              pdf.move_down(20)
                                            end
                                            examples = eval(params["example_#{count}"])
                                            pdf.text examples['text']
                                            pdf.move_down(10)
                                            c = c+1
                                          end
                                        end

                                        g = 0
                                        pdf.move_down(40)
                                        (0..mw_dictionaries_count.to_i).each do |count|
                                          if params["hw_#{count}_check"] == "1"
                                            if g == 0
                                              pdf.text "My Dictionary API", :size => 20
                                              pdf.stroke_horizontal_rule
                                            end
                                            pdf.move_down(20)
                                            pdf.text  params["hw_#{count}"].to_s
                                          end
                                          g = g+1
                                        end

                                        d = 0
                                        pdf.move_down(40)
                                        if pdf.cursor < 100
                                          pdf.start_new_page
                                        end
                                        x,y = 0, pdf.cursor-50

                                        (0..pictures_count.to_i).each do |count|
                                          if params["picture_#{count}_check"] == "1"
                                            if d == 0
                                              pdf.text "Pictures", :size => 20
                                              pdf.stroke_horizontal_rule 
                                            end
                                            pdf.move_down(20)
                                            pictures = eval(params["picture_#{count}"])
                                            begin
                                              size=100
                                              if x < 650
                                                pdf.bounding_box([x,y], :width => size, :height => size) do
                                                  system("convert #{pictures['svg']['png_thumb']} -background white -flatten -define png:color-type=2 -define png:bit-depth=8 image.png") 
                                                  pdf.image 'image.png',:fit => [size, size]
                                                  #pdf.text pictures['svg']['png_thumb']
                                                  x = x+120
                                                end
                                              else
                                                if pdf.cursor < 50
                                                  pdf.start_new_page
                                                end
                                                x = 0
                                                y = pdf.cursor 
                                                pdf.bounding_box([x,y], :width => size, :height => size) do
                                                  pdf.image open(pictures['svg']['png_thumb']),:fit => [size, size]
                                                  x = x+120                                                
                                                end
                                              end
                                            rescue
                                              next
                                            end
                                            d = d+1
                                          end
                                        end
                                send_data(pdf.render, filename: "#{Time.now.strftime("%m-%d-%Y")}-#{params['word']}.pdf",
                                  type: "application/pdf")

                        end


                end
        end
end
